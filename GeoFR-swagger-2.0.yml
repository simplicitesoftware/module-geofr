#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: GeoFR 5
paths:
  /rest/GeofrDepartment:
    get:
      summary: Search GeofrDepartment business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrdepartment-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfGeofrDepartment'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: geofrDepCode
        description: Search filter for Department code
        type: string
        required: false
      - in: query
        name: geofrDepName
        description: Search filter for Department name
        type: string
        required: false
      tags:
      - GeofrDepartment
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      produces:
      - text/plain
      - application/json
      operationId: login
      responses:
        '200':
          description: Successful login
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: _output
        description: Optional output format
        type: string
        required: false
        enum:
        - json
        - oauth2
        - token
      tags:
      - session
  /rest/GeofrRegion/{geofrRegCode}:
    post:
      summary: Create a new GeofrRegionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrregion-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrRegion'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: geofrRegCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeofrRegion'
        in: body
        name: body
      tags:
      - GeofrRegion
      consumes:
      - application/json
    get:
      summary: Get a GeofrRegion business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrregion-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrRegion'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrRegCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - GeofrRegion
    delete:
      summary: Delete a GeofrRegion business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrregion-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrRegCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - GeofrRegion
    put:
      summary: Update a GeofrRegionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrregion-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrRegion'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrRegCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeofrRegion'
        in: body
        name: body
      tags:
      - GeofrRegion
      consumes:
      - application/json
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: logout
      responses:
        '200':
          description: Successfull logout
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      tags:
      - session
  /rest/GeoFRCity/{row_id}:
    post:
      summary: Create a new GeoFRCitybusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrcity-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeoFRCity'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeoFRCity'
        in: body
        name: body
      tags:
      - GeoFRCity
      consumes:
      - application/json
    get:
      summary: Get a GeoFRCity business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrcity-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeoFRCity'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - GeoFRCity
    delete:
      summary: Delete a GeoFRCity business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrcity-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - GeoFRCity
    put:
      summary: Update a GeoFRCitybusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrcity-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeoFRCity'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeoFRCity'
        in: body
        name: body
      tags:
      - GeoFRCity
      consumes:
      - application/json
  /rest/GeofrRegion:
    get:
      summary: Search GeofrRegion business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrregion-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfGeofrRegion'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: geofrRegCode
        description: Search filter for Region code
        type: string
        required: false
      - in: query
        name: geofrRegName
        description: Search filter for Region name
        type: string
        required: false
      tags:
      - GeofrRegion
  /rest/GeofrDepartment/{geofrDepCode}:
    post:
      summary: Create a new GeofrDepartmentbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrdepartment-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrDepartment'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: geofrDepCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeofrDepartment'
        in: body
        name: body
      tags:
      - GeofrDepartment
      consumes:
      - application/json
    get:
      summary: Get a GeofrDepartment business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrdepartment-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrDepartment'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrDepCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - GeofrDepartment
    delete:
      summary: Delete a GeofrDepartment business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrdepartment-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrDepCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - GeofrDepartment
    put:
      summary: Update a GeofrDepartmentbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrdepartment-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeofrDepartment'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: geofrDepCode
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/GeofrDepartment'
        in: body
        name: body
      tags:
      - GeofrDepartment
      consumes:
      - application/json
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: texts
        description: Texts?
        type: boolean
        required: false
      tags:
      - session
  /rest/GeoFRCity:
    get:
      summary: Search GeoFRCity business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-geofrcity-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfGeoFRCity'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: geofrCitName
        description: Search filter for Commune name
        type: string
        required: false
      - in: query
        name: geofrCitCodePostal
        description: Search filter for Code postal
        type: string
        required: false
      - in: query
        name: geofrCitCodeINSEE
        description: Search filter for Code INSEE
        type: string
        required: false
      - in: query
        name: geofrCitCoordinates
        description: Search filter for Coordinates
        type: string
        required: false
      - in: query
        name: geofrCitDepId
        description: Search filter for Department
        type: string
        required: false
      - in: query
        name: geofrCitDepId__geofrDepCode
        description: Search filter for Department code
        type: string
        required: false
      - in: query
        name: geofrCitDepId__geofrDepName
        description: Search filter for Department name
        type: string
        required: false
      - in: query
        name: geofrRegCode
        description: Search filter for Region code
        type: string
        required: false
      - in: query
        name: geofrRegName
        description: Search filter for Region name
        type: string
        required: false
      tags:
      - GeoFRCity
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Error404:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 404
  GeofrDepartment:
    type: object
    properties:
      geofrDepName:
        description: Department name
        type: string
      geofrDepCode:
        description: Department code
        type: string
  ArrayOfGeofrDepartment:
    type: array
    items:
      $ref: '#/definitions/GeofrDepartment'
  ArrayOfGeoFRCity:
    type: array
    items:
      $ref: '#/definitions/GeoFRCity'
  PublicationResult:
    type: object
    properties:
      mime:
        description: MIME type
        type: string
      content:
        description: Content (plain text or base64 encoded)
        type: string
  GeofrRegion:
    type: object
    properties:
      geofrRegName:
        description: Region name
        type: string
      geofrRegCode:
        description: Region code
        type: string
  ArrayOfGeofrRegion:
    type: array
    items:
      $ref: '#/definitions/GeofrRegion'
  GeoFRCity:
    type: object
    properties:
      geofrCitName:
        description: Commune name
        type: string
      geofrCitDepId__geofrDepName:
        description: Department name
        type: string
      geofrCitCoordinates:
        description: Coordinates
        type: string
        example: latitude;longitude
      geofrCitDepId:
        description: Department
        type: string
      geofrCitCodePostal:
        description: Code postal
        type: string
      geofrCitDepId__geofrDepCode:
        description: Department code
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      geofrRegName:
        description: Region name
        type: string
      geofrRegCode:
        description: Region code
        type: string
      geofrCitCodeINSEE:
        description: Code INSEE
        type: string
  ActionResult:
    type: object
    properties:
      result:
        description: Action result
        type: string
  TreeviewData:
    type: object
    properties:
      item:
        description: Object item with lists of linked objects' items
        type: object
  Error400:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 400
  Error401:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 401
  Error500:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 500
  Error403:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 403
swagger: '2.0'
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module GeoFR
  title: GeoFR
  version: '5'
tags:
- name: GeoFRCity
  description: City
- name: GeofrDepartment
  description: Department
- name: GeofrRegion
  description: Region
